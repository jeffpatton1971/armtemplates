{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "2019.04.01.0",
  "parameters": {
    "name": {
      "type": "string"
    },
    "kubernetesVersion": {
      "type": "string",
      "defaultValue": ""
    },
    "dnsPrefix": {
      "type": "string",
      "defaultValue": ""
    },
    "agentPoolProfiles": {
      "type": "array"
    },
    "linuxProfile": {
      "type": "object",
      "defaultValue": {}
    },
    "servicePrincipalProfile": {
      "type": "object"
    },
    "addonProfiles": {
      "type": "object"
    },
    "enableRBAC": {
      "type": "bool",
      "defaultValue": false
    },
    "enablePodSecurityPolicy": {
      "type": "bool",
      "defaultValue": false
    },
    "networkProfile": {
      "type": "object"
    },
    "aadProfile": {
      "type": "object",
      "defaultValue": {}
    },
    "apiServerAuthorizedIPRanges": {
      "type": "array",
      "defaultValue": []
    },
    "Location": {
      "type": "string",
      "defaultValue": ""
    },
    "CustomObject": {
      "type": "object",
      "defaultValue": {}
    },
    "environment": {
      "type": "string",
      "allowedValues": [
        "Production",
        "Staging",
        "Test",
        "UAT",
        "Development",
        "QA",
        "DisasterRecovery",
        "Other"
      ],
      "metadata": {
        "description": "The Environment type we are building",
        "group": "Tags",
        "order": 1,
        "question": "Please enter environment type : "
      },
      "defaultValue": "Production"
    },
    "buildDate": {
      "type": "string",
      "metadata": {
        "description": "The date of this build",
        "group": "Tags",
        "order": 2,
        "question": "Please enter todays date (mm/dd/yyyy) : "
      },
      "defaultValue": "mm/dd/yyyy"
    },
    "buildBy": {
      "type": "string",
      "metadata": {
        "description": "The name of the person who build this environment",
        "group": "Tags",
        "order": 3,
        "question": "Please enter your full name : "
      },
      "defaultValue": "First Last"
    },
    "buildTicket": {
      "type": "string",
      "defaultValue": "######-#####"
    },
    "RaxAutomationExclude": {
      "type": "string",
      "allowedValues": [
        "None",
        "Monitoring",
        "Passport",
        "Antimalware"
      ],
      "metadata": {
        "description": "Select the automation type you will like to exclude for this VM",
        "group": "Tags",
        "order": 4,
        "label": "Automation Exluce",
        "question": "Choose the type of automation you will like to exclude this from"
      },
      "defaultValue": "None"
    }
  },
  "variables": {
    "VirtualNetworkId": "[resourceId(parameters('Network').ResourceGroupName,'Microsoft.Network/virtualNetworks/',parameters('Network').VirtualNetworkName)]",
    "SubnetId": "[concat(variables('VirtualNetworkId'),'/subnets/',parameters('Network').SubnetName)]",
    "vmSize": "[concat('Standard_',parameters('Size'))]",
    "location": "[if(empty(parameters('Location')),resourceGroup().location,parameters('Location'))]",
    "RackspaceTags": {
      "Environment": "[parameters('environment')]",
      "BuildDate": "[parameters('buildDate')]",
      "BuildBy": "[parameters('buildBy')]",
      "BuildTicket": "[parameters('buildTicket')]",
      "RaxAutomation|Exclude": "[parameters('RaxAutomationExclude')]"
    },
    "tags": "[if(not(empty(parameters('CustomObject'))),union(variables('RackspaceTags'),parameters('CustomObject').tags),variables('RackspaceTags'))]",
  },
  "resources": [
    {
      "type": "Microsoft.ContainerService/managedClusters",
      "apiVersion": "2019-02-01",
      "name": "[parameters('name')]",
      "location": "[variables('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "dnsPrefix": "[parameters('dnsPrefix')]",
        "enableRBAC": "[parameters('enableRBAC')]",
        "linuxProfile": {
          "adminUsername": "azureuser",
          "ssh": {
            "publicKeys": [
              {
                "keyData": "keydata"
              }
            ]
          }
        },
        "kubernetesVersion": "[parameters('kubernetesVersion')]",
        "agentPoolProfiles": "[parameters('agentPoolProfiles')]",
        "servicePrincipalProfile": "[parameters('servicePrincipalProfile')]",
        "enablePodSecurityPolicy": "[parameters('enablePodSecurityPolicy')]",
        "addonProfiles": "[parameters('addonProfiles')]"
      }
    }
  ],
  "outputs": {}
}