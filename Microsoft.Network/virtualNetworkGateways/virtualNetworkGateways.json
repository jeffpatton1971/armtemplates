{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "2018.10.01.0",
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Resource name."
      }
    },
    "NetworkResourceGroupName": {
      "type": "string"
    },
    "NetworkName": {
      "type": "string"
    },
    "SubnetName": {
      "type": "string"
    },
    "privateIPAllocationMethod": {
      "type": "string",
      "allowedValues": [
        "Dynamic",
        "Static"
      ],
      "metadata": {
        "description": "The private IP allocation method. Possible values are: 'Static' and 'Dynamic'."
      }
    },
    "activeActive": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "ActiveActive flag"
      }
    },
    "bgpSettings": {
      "type": "object",
      "defaultValue": null,
      "metadata": {
        "description": "Virtual network gateway's BGP speaker settings."
      }
    },
    "enableBgp": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Whether BGP is enabled for this virtual network gateway or not."
      }
    },
    "gatewayType": {
      "type": "string",
      "allowedValues": [
        "ExpressRoute",
        "Vpn"
      ],
      "metadata": {
        "description": "The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'."
      }
    },
    "ipConfigurations": {
      "type": "array",
      "metadata": {
        "description": "IP configurations for virtual network gateway."
      }
    },
    "vpnType": {
      "type": "string",
      "defaultValue": "",
      "allowedValues": [
        "",
        "PolicyBased",
        "RouteBased"
      ],
      "metadata": {
        "description": "The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'."
      }
    },
    "sku": {
      "type": "object",
      "metadata": {
        "description": "The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway."
      }
    },
    "environment": {
      "type": "string",
      "allowedValues": [
        "Production",
        "Staging",
        "Test",
        "UAT",
        "Development",
        "Disaster Recovery",
        "Q/A",
        "Other"
      ],
      "metadata": {
        "description": "The Environment type we are building",
        "group": "Tags",
        "order": 1,
        "question": "Please enter environment type : "
      },
      "defaultValue": "Production"
    },
    "buildDate": {
      "type": "string",
      "metadata": {
        "description": "The date of this build",
        "group": "Tags",
        "order": 2,
        "question": "Please enter todays date (mm/dd/yyyy) : "
      },
      "defaultValue": "mm/dd/yyyy"
    },
    "buildBy": {
      "type": "string",
      "metadata": {
        "description": "The name of the person who build this environment",
        "group": "Tags",
        "order": 3,
        "question": "Please enter your full name : "
      },
      "defaultValue": "First Last"
    },
    "RaxAutomationExclude": {
      "type": "string",
      "allowedValues": [
        "None",
        "Monitoring",
        "Passport",
        "Antimalware"
      ],
      "metadata": {
        "description": "Select the automation type you will like to exclude for this VM",
        "group": "Tags",
        "order": 4,
        "label": "Automation Exluce",
        "question": "Choose the type of automation you will like to exclude this from"
      },
      "defaultValue": "None"
    }
  },
  "variables": {
    "vpnGwCondition": "[if(parameters('enableBgp'),3,if(and(not(parameters('enableBgp')),parameters('activeActive')),2,1))]",
    "FrontendIpConfigurationName": "[concat(parameters('name'),'-ipc')]",
    "PublicIpAddressName": "[concat(parameters('name'),'-pip')]",
    "vnetId": "[resourceId(parameters('NetworkResourceGroupName'), 'Microsoft.Network/virtualNetworks',parameters('NetworkName'))]",
    "subnetId": "[concat(variables('vnetId'),'/subnets/',parameters('SubnetName'))]",
    "tags": {
      "displayName": "InternalLoadBalancer",
      "Environment": "[parameters('environment')]",
      "BuildDate": "[parameters('buildDate')]",
      "BuildBy": "[parameters('buildBy')]",
      "RaxAutomation|Exclude": "[parameters('RaxAutomationExclude')]"
    }
  },
  "resources": [
    {
      "apiVersion": "2017-03-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('PublicIpAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "condition": "[equals(variables('vpnGwCondition'),1)]",
      "name": "[parameters('Name')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "[concat(parameters('name'),'-pip')]"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "2018.10.01.0",
          "resources": [
            {
              "apiVersion": "2017-09-01",
              "name": "[parameters('name')]",
              "type": "Microsoft.Network/virtualNetworkGateways",
              "location": "[resourceGroup().location]",
              "dependsOn": [],
              "properties": {
                "gatewayType": "[parameters('gatewayType')]",
                "ipConfigurations": {
                  "name": "[parameters('name')]",
                  "properties": {
                    "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                    "subnet": {
                      "id": "[variables('subnetId')]"
                    },
                    "publicIpAddress": {
                      "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('PublicIpAddressName'))]"
                    }
                  }
                },
                "sku": "[parameters('sku')]"
              },
              "tags": "[variables('tags')]"
            }
          ]
        }
      }
    },
    {
      "condition": "[equals(variables('vpnGwCondition'),2)]",
      "name": "[parameters('Name')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "[concat(parameters('name'),'-pip')]"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "2018.10.01.0",
          "resources": [
            {
              "apiVersion": "2017-09-01",
              "name": "[parameters('name')]",
              "type": "Microsoft.Network/virtualNetworkGateways",
              "location": "[resourceGroup().location]",
              "dependsOn": [],
              "properties": {
                "activeActive": "[parameters('activeActive')]",
                "gatewayType": "[parameters('gatewayType')]",
                "ipConfigurations": {
                  "name": "[parameters('name')]",
                  "properties": {
                    "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                    "subnet": {
                      "id": "[variables('subnetId')]"
                    },
                    "publicIpAddress": {
                      "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('PublicIpAddressName'))]"
                    }
                  }
                },
                "vpnType": "[parameters('vpnType')]",
                "sku": "[parameters('sku')]"
              },
              "tags": "[variables('tags')]"
            }
          ]
        }
      }
    },
    {
      "condition": "[equals(variables('vpnGwCondition'),3)]",
      "name": "[parameters('Name')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "[concat(parameters('name'),'-pip')]"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "2018.10.01.0",
          "resources": [
            {
              "apiVersion": "2017-09-01",
              "name": "[parameters('name')]",
              "type": "Microsoft.Network/virtualNetworkGateways",
              "location": "[resourceGroup().location]",
              "dependsOn": [],
              "properties": {
                "activeActive": "[parameters('activeActive')]",
                "gatewayType": "[parameters('gatewayType')]",
                "ipConfigurations": {
                  "name": "[parameters('name')]",
                  "properties": {
                    "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                    "subnet": {
                      "id": "[variables('subnetId')]"
                    },
                    "publicIpAddress": {
                      "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('PublicIpAddressName'))]"
                    }
                  }
                },
                "enableBgp": "[parameters('enableBgp')]",
                "bgpSettings": "[parameters('bgpSettings')]",
                "vpnType": "[parameters('vpnType')]",
                "sku": "[parameters('sku')]"
              },
              "tags": "[variables('tags')]"
            }
          ]
        }
      }
    }
  ],
  "outputs": {
  }
}