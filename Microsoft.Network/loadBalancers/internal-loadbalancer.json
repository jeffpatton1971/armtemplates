{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "name": {
      "type": "string"
    },
    "NetworkResourceGroupName": {
      "type": "string"
    },
    "NetworkName": {
      "type": "string"
    },
    "SubnetName": {
      "type": "string"
    },
    "loadBalancingRules": {
      "type": "array"
    },
    "environment": {
      "type": "string",
      "allowedValues": [
        "Production",
        "Staging",
        "Test",
        "UAT",
        "Development",
        "Disaster Recovery",
        "Q/A",
        "Other"
      ],
      "metadata": {
        "description": "The Environment type we are building",
        "group": "Tags",
        "order": 1,
        "question": "Please enter environment type : "
      },
      "defaultValue": "Production"
    },
    "buildDate": {
      "type": "string",
      "metadata": {
        "description": "The date of this build",
        "group": "Tags",
        "order": 2,
        "question": "Please enter todays date (mm/dd/yyyy) : "
      },
      "defaultValue": "mm/dd/yyyy"
    },
    "buildBy": {
      "type": "string",
      "metadata": {
        "description": "The name of the person who build this environment",
        "group": "Tags",
        "order": 3,
        "question": "Please enter your full name : "
      },
      "defaultValue": "First Last"
    },
    "RaxAutomationExclude": {
      "type": "string",
      "allowedValues": [
        "None",
        "Monitoring",
        "Passport",
        "Antimalware"
      ],
      "metadata": {
        "description": "Select the automation type you will like to exclude for this VM",
        "group": "Tags",
        "order": 4,
        "label": "Automation Exluce",
        "question": "Choose the type of automation you will like to exclude this from"
      },
      "defaultValue": "None"
    }
  },
  "variables": {
    "LoadBalancerName": "[parameters('name')]",
    "FrontendIpConfigurationName": "[concat(parameters('name'),'-ipc')]",
    "BackendAddressPoolName": "[concat(parameters('name'),'-bep')]",
    "LoadBalancingRuleName": "[concat(parameters('name'),'-rul')]",
    "LoadbalancingProbeName": "[concat(parameters('name'),'-prb')]",
    "vnetId": "[resourceId(parameters('NetworkResourceGroupName'), 'Microsoft.Network/virtualNetworks',parameters('NetworkName'))]",
    "subnetId": "[concat(variables('vnetId'),'/subnets/',parameters('SubnetName'))]",
    "tags": {
      "displayName": "InternalLoadBalancer",
      "Environment": "[parameters('environment')]",
      "BuildDate": "[parameters('buildDate')]",
      "BuildBy": "[parameters('buildBy')]",
      "RaxAutomation|Exclude": "[parameters('RaxAutomationExclude')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('LoadBalancerName')]",
      "apiVersion": "2017-09-01",
      "dependsOn": [],
      "location": "[resourceGroup().location]",
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('FrontendIpConfigurationName')]",
            "properties": {
              "subnet": {
                "id": "[variables('subnetId')]"
              },
              "privateIPAddress": "",
              "privateIPAllocationMethod": "Dynamic"
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('BackendAddressPoolName')]"
          }
        ],
        "copy": [
          {
            "name": "loadBalancingRules",
            "count": "[length(parameters('loadBalancingRules'))]",
            "input": {
              "name": "[concat(variables('LoadBalancingRuleName'),'-',add(copyIndex('loadBalancingRules'),1))]",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[concat(resourceId(resourceGroup().name,'Microsoft.Network/loadBalancers',variables('LoadBalancerName')),'/frontendIPConfigurations/',variables('FrontendIpConfigurationName'))]"
                },
                "backendAddressPool": {
                  "id": "[concat(resourceId(resourceGroup().name,'Microsoft.Network/loadBalancers',variables('LoadBalancerName')),'/backendAddressPools/',variables('BackendAddressPoolName'))]"
                },
                "protocol": "[parameters('loadBalancingRules')[copyIndex('loadBalancingRules')].protocol]",
                "frontendPort": "[parameters('loadBalancingRules')[copyIndex('loadBalancingRules')].frontendPort]",
                "backendPort": "[parameters('loadBalancingRules')[copyIndex('loadBalancingRules')].backendPort]",
                "probe": {
                  "id": "[concat(resourceId(resourceGroup().name,'Microsoft.Network/loadBalancers',variables('LoadBalancerName')),'/probes/',variables('LoadbalancingProbeName'),'-',parameters('loadBalancingRules')[copyIndex('loadBalancingRules')].backendPort)]"
                }
              }
            }
          },
          {
            "name": "probes",
            "count": "[length(parameters('loadBalancingRules'))]",
            "input": {
              "name": "[concat(variables('LoadbalancingProbeName'),'-',parameters('loadBalancingRules')[copyIndex('probes')].backendPort)]",
              "properties": {
                "protocol": "[parameters('loadBalancingRules')[copyIndex('probes')].protocol]",
                "port": "[parameters('loadBalancingRules')[copyIndex('probes')].backendPort]",
                "intervalInSeconds": "[parameters('loadBalancingRules')[copyIndex('probes')].intervalInSeconds]",
                "numberOfProbes": "[parameters('loadBalancingRules')[copyIndex('probes')].numberOfProbes]"
              }
            }
          }
        ]
      },
      "tags": "[variables('tags')]"
    }
  ],
  "outputs": {}
}