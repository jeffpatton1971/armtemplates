{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "2019.04.01.0",
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Resource name."
      }
    },
    "VirtualNetworkGateway1": {
      "type": "object",
      "defaultValue": {}
    },
    "VirtualNetworkGateway2": {
      "type": "object",
      "defaultValue": {}
    },
    "LocalNetworkGateway2": {
      "type": "object",
      "defaultValue": {}
    },
    "VirtualNetworkPeer": {
      "type": "object",
      "defaultValue": {}
    },
    "Location": {
      "type": "string",
      "defaultValue": ""
    },
    "authorizationKey": {
      "type": "string",
      "defaultValue": ""
    },
    "sharedKey": {
      "type": "string",
      "defaultValue": ""
    },
    "connectionType": {
      "type": "string",
      "allowedValues": [
        "Ipsec",
        "Vnet2Vnet",
        "ExpressRoute",
        "VPNClient"
      ]
    },
    "connectionProtocol": {
      "type": "string",
      "allowedValues": [
        "",
        "IKEv2",
        "IKEv1"
      ]
    },
    "routingWeight": {
      "type": "int",
      "defaultValue": 3
    },
    "enableBgp": {
      "type": "bool",
      "defaultValue": false
    },
    "usePolicyBasedTrafficSelectors": {
      "type": "bool",
      "defaultValue": false
    },
    "expressRouteGatewayBypass": {
      "type": "bool",
      "defaultValue": false
    },
    "CustomObject": {
      "type": "object",
      "defaultValue": {}
    },
    "environment": {
      "type": "string",
      "allowedValues": [
        "Production",
        "Staging",
        "Test",
        "UAT",
        "Development",
        "QA",
        "DisasterRecovery",
        "Other"
      ],
      "metadata": {
        "description": "The Environment type we are building",
        "group": "Tags",
        "order": 1,
        "question": "Please enter environment type : "
      },
      "defaultValue": "Production"
    },
    "buildDate": {
      "type": "string",
      "metadata": {
        "description": "The date of this build",
        "group": "Tags",
        "order": 2,
        "question": "Please enter todays date (mm/dd/yyyy) : "
      },
      "defaultValue": "mm/dd/yyyy"
    },
    "buildBy": {
      "type": "string",
      "metadata": {
        "description": "The name of the person who build this environment",
        "group": "Tags",
        "order": 3,
        "question": "Please enter your full name : "
      },
      "defaultValue": "First Last"
    },
    "RaxAutomationExclude": {
      "type": "string",
      "allowedValues": [
        "None",
        "Monitoring",
        "Passport",
        "Antimalware"
      ],
      "metadata": {
        "description": "Select the automation type you will like to exclude for this VM",
        "group": "Tags",
        "order": 4,
        "label": "Automation Exluce",
        "question": "Choose the type of automation you will like to exclude this from"
      },
      "defaultValue": "None"
    }
  },
  "variables": {
    "location": "[if(empty(parameters('Location')),resourceGroup().location,parameters('Location'))]",
    "VirtualNetworkGateway1id": "[if(not(empty(parameters('VirtualNetworkGateway1'))),if(not(empty(parameters('VirtualNetworkGateway1').id)),concat('/subscriptions/',parameters('VirtualNetworkGateway1').id,'/resourceGroups/',parameters('VirtualNetworkGateway1').ResourceGroupName,'/providers/Microsoft.Network/virtualNetworkGateways/',parameters('VirtualNetworkGateway1').Name),resourceId(parameters('VirtualNetworkGateway1').ResourceGroupName,'Microsoft.Network/virtualNetworkGateways',parameters('VirtualNetworkGateway1').Name)),json('null'))]",
    "VirtualNetworkGateway2id": "[if(not(empty(parameters('VirtualNetworkGateway2'))),if(not(empty(parameters('VirtualNetworkGateway2').id)),concat('/subscriptions/',parameters('VirtualNetworkGateway2').id,'/resourceGroups/',parameters('VirtualNetworkGateway2').ResourceGroupName,'/providers/Microsoft.Network/virtualNetworkGateways/',parameters('VirtualNetworkGateway2').Name),resourceId(parameters('VirtualNetworkGateway2').ResourceGroupName,'Microsoft.Network/virtualNetworkGateways',parameters('VirtualNetworkGateway2').Name)),json('null'))]",
    "LocalNetworkGateway2id": "[if(not(empty(parameters('LocalNetworkGateway2'))),if(not(empty(parameters('LocalNetworkGateway2').id)),concat('/subscriptions/',parameters('LocalNetworkGateway2').id,'/resourceGroups/',parameters('LocalNetworkGateway2').ResourceGroupName,'/providers/Microsoft.Network/virtualNetworkGateways/',parameters('LocalNetworkGateway2').Name),resourceId(parameters('LocalNetworkGateway2').ResourceGroupName,'Microsoft.Network/localNetworkGateways',parameters('LocalNetworkGateway2').Name)),json('null'))]",
    "VirtualNetworkPeerid": "[if(not(empty(parameters('VirtualNetworkPeer'))),if(not(empty(parameters('VirtualNetworkPeer').id)),concat('/subscriptions/',parameters('VirtualNetworkPeer').id,'/resourceGroups/',parameters('VirtualNetworkPeer').ResourceGroupName,'/providers/Microsoft.Network/virtualNetworkGateways/',parameters('VirtualNetworkPeer').Name),resourceId(parameters('VirtualNetworkPeer').ResourceGroupName,'Microsoft.Network/localNetworkGateways',parameters('VirtualNetworkPeer').Name)),json('null'))]",
    "RackspaceTags": {
      "Environment": "[parameters('environment')]",
      "BuildDate": "[parameters('buildDate')]",
      "BuildBy": "[parameters('buildBy')]",
      "RaxAutomation|Exclude": "[parameters('RaxAutomationExclude')]"
    },
    "tags": "[if(not(empty(parameters('CustomObject'))),union(variables('RackspaceTags'),parameters('CustomObject').tags),variables('RackspaceTags'))]",
    "connection": {
      "name": "[parameters('name')]",
      "type": "Microsoft.Network/connections",
      "apiVersion": "2018-08-01",
      "location": "[variables('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "authorizationKey": "[parameters('authorizationKey')]",
        "virtualNetworkGateway1": "[if(not(empty(parameters('VirtualNetworkGateway1'))),json(concat('{\"id\": \"',variables('VirtualNetworkGateway1id'),'\"}')),json('null'))]",
        "virtualNetworkGateway2": "[if(not(empty(parameters('VirtualNetworkGateway2'))),json(concat('{\"id\": \"',variables('VirtualNetworkGateway2id'),'\"}')),json('null'))]",
        "localNetworkGateway2": "[if(not(empty(parameters('LocalNetworkGateway2'))),json(concat('{\"id\": \"',variables('LocalNetworkGateway2id'),'\"}')),json('null'))]",
        "connectionType": "[parameters('connectionType')]",
        "connectionProtocol": "[parameters('connectionProtocol')]",
        "routingWeight": "[parameters('routingWeight')]",
        "sharedKey": "[parameters('sharedKey')]",
        "peer": "[if(not(empty(parameters('VirtualNetworkPeer'))),json(concat('{\"id\": \"',variables('VirtualNetworkPeerid'),'\"}')),json('null'))]",
        "enableBgp": "[parameters('enableBgp')]",
        "usePolicyBasedTrafficSelectors": "[parameters('usePolicyBasedTrafficSelectors')]",
        "expressRouteGatewayBypass": "[parameters('expressRouteGatewayBypass')]"
      }
    },
    "originalresources": {
      "name": "[parameters('name')]",
      "type": "Microsoft.Network/connections",
      "apiVersion": "2018-08-01",
      "location": "[variables('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "authorizationKey": "[parameters('authorizationKey')]",
        "virtualNetworkGateway1": {
          "id": "[variables('VirtualNetworkGateway1id')]"
        },
        "virtualNetworkGateway2": {
          "id": "[variables('VirtualNetworkGateway2id')]"
        },
        "connectionType": "[parameters('connectionType')]",
        "connectionProtocol": "[parameters('connectionProtocol')]",
        "routingWeight": "[parameters('routingWeight')]",
        "sharedKey": "[parameters('sharedKey')]",
        "enableBgp": "[parameters('enableBgp')]",
        "usePolicyBasedTrafficSelectors": "[parameters('usePolicyBasedTrafficSelectors')]",
        "expressRouteGatewayBypass": "[parameters('expressRouteGatewayBypass')]"
      }
    }
  },
  "resources": [
    {
      "name": "[parameters('name')]",
      "type": "Microsoft.Network/connections",
      "apiVersion": "2018-08-01",
      "location": "[variables('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "authorizationKey": "[parameters('authorizationKey')]",
        "virtualNetworkGateway1": "[if(not(empty(parameters('VirtualNetworkGateway1'))),json(concat('{\"id\": \"',variables('VirtualNetworkGateway1id'),'\"}')),json('null'))]",
        "virtualNetworkGateway2": "[if(not(empty(parameters('VirtualNetworkGateway2'))),json(concat('{\"id\": \"',variables('VirtualNetworkGateway2id'),'\"}')),json('null'))]",
        "localNetworkGateway2": "[if(not(empty(parameters('LocalNetworkGateway2'))),json(concat('{\"id\": \"',variables('LocalNetworkGateway2id'),'\"}')),json('null'))]",
        "connectionType": "[parameters('connectionType')]",
        "connectionProtocol": "[parameters('connectionProtocol')]",
        "routingWeight": "[parameters('routingWeight')]",
        "sharedKey": "[parameters('sharedKey')]",
        "peer": "[if(not(empty(parameters('VirtualNetworkPeer'))),json(concat('{\"id\": \"',variables('VirtualNetworkPeerid'),'\"}')),json('null'))]",
        "enableBgp": "[parameters('enableBgp')]",
        "usePolicyBasedTrafficSelectors": "[parameters('usePolicyBasedTrafficSelectors')]",
        "expressRouteGatewayBypass": "[parameters('expressRouteGatewayBypass')]"
      }
    }
  ],
  "outputs": {
    "armTemplate": {
      "type": "object",
      "value": {
        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
        "contentVersion": "2019.04.01.0",
        "parameters": {},
        "variables": {},
        "resources": "[createArray(variables('connection'))]",
        "outputs": {}
      }
    }
  }
}