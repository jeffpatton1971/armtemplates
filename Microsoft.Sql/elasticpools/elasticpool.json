{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
  "contentVersion": "2019.01.01.0",
  "parameters": {
    "name": {
      "type": "string"
    },
    "ServerName": {
      "type": "string"
    },
    "LicenseType": {
      "type": "string",
      "allowedValues": [
        "",
        "BasePrices",
        "LicenseIncluded"
      ],
      "defaultValue": "LicenseIncluded"
    },
    "Family": {
      "type": "string",
      "allowedValues": [
        "",
        "Gen4",
        "Gen5"
      ],
      "defaultValue": ""
    },
    "Tier": {
      "type": "string",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium",
        "GeneralPurpose",
        "BusinessCritical"
      ],
      "defaultValue": "Basic"
    },
    "vCore": {
      "type": "string",
      "allowedValues": [
        "",
        "1",
        "2",
        "4",
        "8",
        "16",
        "24",
        "32",
        "80"
      ],
      "defaultValue": ""
    },
    "minCore": {
      "type": "string",
      "allowedValues": [
        "",
        "0",
        "1",
        "2",
        "4",
        "8",
        "16",
        "24",
        "32",
        "80"
      ],
      "defaultValue": "0"
    },
    "maxCore": {
      "type": "string",
      "allowedValues": [
        "",
        "0",
        "1",
        "2",
        "4",
        "8",
        "16",
        "24",
        "32",
        "80"
      ],
      "defaultValue": "[parameters('vCore')]"
    },
    "eDTU": {
      "type": "string",
      "allowedValues": [
        "0",
        "50",
        "100",
        "200",
        "250",
        "300",
        "400",
        "800",
        "1200",
        "1600",
        "2000",
        "2500",
        "3000",
        "3500",
        "4000"
      ],
      "defaultValue": "50"
    },
    "minDTU": {
      "type": "string",
      "allowedValues": [
        "0",
        "50",
        "100",
        "200",
        "250",
        "300",
        "400",
        "800",
        "1200",
        "1600",
        "2000",
        "2500",
        "3000",
        "3500",
        "4000"
      ],
      "defaultValue": "0"
    },
    "maxDTU": {
      "type": "string",
      "allowedValues": [
        "0",
        "5",
        "10",
        "50",
        "100",
        "200",
        "250",
        "300",
        "400",
        "800",
        "1200",
        "1600",
        "2000",
        "2500",
        "3000",
        "3500",
        "4000"
      ],
      "defaultValue": "5"
    },
    "zoneRedundant": {
      "type": "bool",
      "defaultValue": false
    },
    "CustomObject": {
      "type": "object",
      "defaultValue": {}
    },
    "environment": {
      "type": "string",
      "allowedValues": [
        "Production",
        "Staging",
        "Test",
        "UAT",
        "Development",
        "QA",
        "DisasterRecovery",
        "Other"
      ],
      "metadata": {
        "description": "The Environment type we are building",
        "group": "Tags",
        "order": 1,
        "question": "Please enter environment type : "
      },
      "defaultValue": "Production"
    },
    "buildDate": {
      "type": "string",
      "metadata": {
        "description": "The date of this build",
        "group": "Tags",
        "order": 2,
        "question": "Please enter todays date (mm/dd/yyyy) : "
      },
      "defaultValue": "mm/dd/yyyy"
    },
    "buildBy": {
      "type": "string",
      "metadata": {
        "description": "The name of the person who build this environment",
        "group": "Tags",
        "order": 3,
        "question": "Please enter your full name : "
      },
      "defaultValue": "First Last"
    },
    "RaxAutomationExclude": {
      "type": "string",
      "allowedValues": [
        "None",
        "Monitoring",
        "Passport",
        "Antimalware"
      ],
      "metadata": {
        "description": "Select the automation type you will like to exclude for this VM",
        "group": "Tags",
        "order": 4,
        "label": "Automation Exluce",
        "question": "Choose the type of automation you will like to exclude this from"
      },
      "defaultValue": "None"
    }
  },
  "variables": {
    "Tier": "[if(equals(parameters('Tier'),'GeneralPurpose'),'GP',if(equals(parameters('Tier'),'BusinessCritical'),'BC','null'))]",
    "vCore": "[if(empty(parameters('vCore')),1,int(parameters('vCore')))]",
    "Cores": "[if(and(equals(parameters('Family'),'Gen4'),greater(variables('vCore'),24)),24,variables('vCore'))]",
    "SkuName": "[concat(variables('Tier'),'_',parameters('Family'))]",
    "Skus": {
      "eDTU": {
        "name": "[concat(parameters('Tier'),'Pool')]",
        "tier": "[parameters('Tier')]",
        "capacity": "[parameters('eDTU')]"
      },
      "vCore": {
        "name": "[variables('SkuName')]",
        "tier": "[parameters('Tier')]",
        "capacity": "[parameters('vCore')]"
      }
    },
    "sku": "[if(equals(parameters('Tier'),'Basic'),variables('Skus').eDTU,if(or(equals(parameters('Tier'),'Standard'),equals(parameters('Tier'),'Premium')),variables('Skus').eDTU,variables('Skus').vCore))]",
    "DatabaseSettings": {
      "eDTU": {
        "minCapacity": "[if(equals(parameters('Tier'),'Basic'),'0',parameters('minDTU'))]",
        "maxCapacity": "[if(equals(parameters('Tier'),'Basic'),'5',parameters('maxDTU'))]"
      },
      "vCore": {
        "minCapacity": "[parameters('minCore')]",
        "maxCapacity": "[parameters('maxCore')]"
      }
    },
    "perDatabaseSettings": "[if(empty(parameters('vCore')),variables('DatabaseSettings').eDTU,variables('DatabaseSettings').vCore)]",
    "RackspaceTags": {
      "Environment": "[parameters('environment')]",
      "BuildDate": "[parameters('buildDate')]",
      "BuildBy": "[parameters('buildBy')]",
      "RaxAutomation|Exclude": "[parameters('RaxAutomationExclude')]"
    },
    "tags": "[union(variables('RackspaceTags'), parameters('CustomObject').tags)]",
    "ep": {
      "name": "[concat(parameters('serverName'), '/', parameters('name'))]",
      "location": "[resourceGroup().location]",
      "type": "Microsoft.Sql/servers/elasticpools",
      "apiVersion": "2017-10-01-preview",
      "properties": {
        "perDatabaseSettings": "[variables('perDatabaseSettings')]",
        "zoneRedundant": "[parameters('zoneRedundant')]",
        "licenseType": "[parameters('licenseType')]"
      },
      "tags": "[variables('tags')]"
    }
  },
  "resources": [
    {
      "name": "[concat(parameters('serverName'), '/', parameters('name'))]",
      "location": "[resourceGroup().location]",
      "type": "Microsoft.Sql/servers/elasticpools",
      "apiVersion": "2017-10-01-preview",
      "properties": {
        "perDatabaseSettings": "[variables('perDatabaseSettings')]",
        "zoneRedundant": "[parameters('zoneRedundant')]",
        "licenseType": "[parameters('licenseType')]"
      },
      "tags": "[variables('tags')]",
      "sku": "[variables('sku')]"
    }
  ],
  "outputs": {
  }
}