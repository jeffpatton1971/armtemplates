{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "2018.12.01.0",
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Name of the Recovery Services Vault"
      }
    },
    "policyName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Backup Policy"
      }
    },
    "scheduleRunTimes": {
      "type": "array",
      "metadata": {
        "description": "Times in day when backup should be triggered. e.g. 01:00, 13:00. This will be used in LTR too for daily, weekly, monthly and yearly backup."
      }
    },
    "dailyRetentionDurationCount": {
      "type": "int",
      "metadata": {
        "description": "Number of days you want to retain the backup"
      },
      "defaultValue": 7
    },
    "weeklyRetentionDurationCount": {
      "type": "int",
      "metadata": {
        "description": "Number of weeks you want to retain the backup"
      },
      "defaultValue": 4
    },
    "daysOfTheWeek": {
      "type": "array",
      "metadata": {
        "description": "Days of the week backup should be trigger. e.g Sunday, Tuesday"
      }
    },
    "TimeZone": {
      "type": "string",
      "defaultValue": ""
    },
    "environment": {
      "type": "string",
      "allowedValues": [
        "Production",
        "Staging",
        "Test",
        "UAT",
        "Development",
        "QA",
        "DisasterRecovery",
        "Other"
      ],
      "metadata": {
        "description": "The Environment type we are building",
        "group": "Tags",
        "order": 1,
        "question": "Please enter environment type : "
      },
      "defaultValue": "Production"
    },
    "buildDate": {
      "type": "string",
      "metadata": {
        "description": "The date of this build",
        "group": "Tags",
        "order": 2,
        "question": "Please enter todays date (mm/dd/yyyy) : "
      },
      "defaultValue": "mm/dd/yyyy"
    },
    "buildBy": {
      "type": "string",
      "metadata": {
        "description": "The name of the person who build this environment",
        "group": "Tags",
        "order": 3,
        "question": "Please enter your full name : "
      },
      "defaultValue": "First Last"
    },
    "RaxAutomationExclude": {
      "type": "string",
      "allowedValues": [
        "None",
        "Monitoring",
        "Passport",
        "Antimalware"
      ],
      "metadata": {
        "description": "Select the automation type you will like to exclude for this VM",
        "group": "Tags",
        "order": 4,
        "label": "Automation Exluce",
        "question": "Choose the type of automation you will like to exclude this from"
      },
      "defaultValue": "None"
    }
  },
  "variables": {
    "regions": {
      "australiacentral": {
        "location": "australiacentral",
        "abbreviation": "ace",
        "timezone": "E. Australia Standard Time"
      },
      "australiacentral2": {
        "location": "australiacentral2",
        "abbreviation": "ac2",
        "timezone": "E. Australia Standard Time"
      },
      "australiaeast": {
        "location": "australiaeast",
        "abbreviation": "aue",
        "timezone": "E. Australia Standard Time"
      },
      "australiasoutheast": {
        "location": "australiasoutheast",
        "abbreviation": "ase",
        "timezone": "E. Australia Standard Time"
      },
      "brazilsouth": {
        "location": "brazilsouth",
        "abbreviation": "bzs",
        "timezone": "Central Brazilian Standard Time"
      },
      "canadacentral": {
        "location": "canadacentral",
        "abbreviation": "cac",
        "timezone": "Canada Central Standard Time"
      },
      "canadaeast": {
        "location": "canadaeast",
        "abbreviation": "cae",
        "timezone": "Eastern Standard Time"
      },
      "centralindia": {
        "location": "centralindia",
        "abbreviation": "cin",
        "timezone": "India Standard Time"
      },
      "centralus": {
        "location": "southcentralus",
        "abbreviation": "cus",
        "timezone": "Central Standard Time"
      },
      "eastasia": {
        "location": "eastasia",
        "abbreviation": "eas",
        "timezone": "SE Asia Standard Time"
      },
      "eastus": {
        "location": "eastus",
        "abbreviation": "eus",
        "timezone": "Eastern Standard Time"
      },
      "eastus2": {
        "location": "eastus2",
        "abbreviation": "eus",
        "timezone": "Eastern Standard Time"
      },
      "francecentral": {
        "location": "francecentral",
        "abbreviation": "frc",
        "timezone": "Romance Standard Time"
      },
      "francesouth": {
        "location": "francesouth",
        "abbreviation": "frs",
        "timezone": "Romance Standard Time"
      },
      "japaneast": {
        "location": "japaneast",
        "abbreviation": "jpe",
        "timezone": "Tokyo Standard Time"
      },
      "japanwest": {
        "location": "japanwest",
        "abbreviation": "jpw",
        "timezone": "Tokyo Standard Tim"
      },
      "koreacentral": {
        "location": "koreacentral",
        "abbreviation": "kce",
        "timezone": "Korea Standard Time"
      },
      "koreasouth": {
        "location": "koreasouth",
        "abbreviation": "kos",
        "timezone": "Korea Standard Time"
      },
      "northcentralus": {
        "location": "northcentralus",
        "abbreviation": "ncu",
        "timezone": "Central Standard Time"
      },
      "northeurope": {
        "location": "northeurope",
        "abbreviation": "neu",
        "timezone": "GMT Standard Time"
      },
      "southcentralus": {
        "location": "southcentralus",
        "abbreviation": "scu",
        "timezone": "Central Standard Time"
      },
      "southeastasia": {
        "location": "southeastasia",
        "abbreviation": "sea",
        "timezone": "SE Asia Standard Time"
      },
      "southindia": {
        "location": "southindia",
        "abbreviation": "soi",
        "timezone": "India Standard Time"
      },
      "uksouth": {
        "location": "uksouth",
        "abbreviation": "uks",
        "timezone": "GMT Standard Time"
      },
      "ukwest": {
        "location": "ukwest",
        "abbreviation": "ukw",
        "timezone": "GMT Standard Time"
      },
      "westcentralus": {
        "location": "westcentralus",
        "abbreviation": "wcu",
        "timezone": "Pacific Standard Time"
      },
      "westeurope": {
        "location": "westeurope",
        "abbreviation": "weu",
        "timezone": "GMT Standard Time"
      },
      "westindia": {
        "location": "westindia",
        "abbreviation": "win",
        "timezone": "India Standard Time"
      },
      "westus": {
        "location": "westus",
        "abbreviation": "wus",
        "timezone": "Pacific Standard Time"
      },
      "westus2": {
        "location": "westus2",
        "abbreviation": "wus",
        "timezone": "Pacific Standard Time"
      }
    },
    "timeZone": "[if(empty(parameters('TimeZone')),variables('regions')[resourceGroup().location].timezone,parameters('Timezone'))]",
    "tags": {
      "Environment": "[parameters('environment')]",
      "BuildDate": "[parameters('buildDate')]",
      "BuildBy": "[parameters('buildBy')]",
      "RaxAutomation|Exclude": "[parameters('RaxAutomationExclude')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.RecoveryServices/vaults",
      "apiVersion": "2015-11-10",
      "name": "[parameters('Name')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "RS0",
        "tier": "Standard"
      },
      "properties": {}
    },
    {
      "apiVersion": "2015-11-10",
      "name": "[concat(parameters('name'), '/', parameters('policyName'))]",
      "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
      "dependsOn": [
        "[concat('Microsoft.RecoveryServices/vaults/', parameters('name'))]"
      ],
      "location": "[resourceGroup().location]",
      "properties": {
        "backupManagementType": "AzureIaasVM",
        "schedulePolicy": {
          "schedulePolicyType": "SimpleSchedulePolicy",
          "scheduleRunDays": [],
          "scheduleRunFrequency": "Daily",
          "scheduleRunTimes": "[parameters('scheduleRunTimes')]"
        },
        "retentionPolicy": {
          "dailySchedule": {
            "retentionTimes": "[parameters('scheduleRunTimes')]",
            "retentionDuration": {
              "count": "[parameters('dailyRetentionDurationCount')]",
              "durationType": "Days"
            }
          },
          "weeklySchedule": {
            "daysOfTheWeek": "[parameters('daysOfTheWeek')]",
            "retentionTimes": "[parameters('scheduleRunTimes')]",
            "retentionDuration": {
              "count": "[parameters('weeklyRetentionDurationCount')]",
              "durationType": "Weeks"
            }
          },
          "monthlySchedule": null,
          "yearlySchedule": null,
          "retentionPolicyType": "LongTermRetentionPolicy"
        },
        "tags": "[variables('tags')]",
        "timeZone": "[variables('timeZone')]"
      }
    }
  ],
  "outputs": {}
}